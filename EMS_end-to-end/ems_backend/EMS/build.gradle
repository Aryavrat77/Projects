plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.hidetake.swagger.generator' version '2.19.2'
    id "com.netflix.nebula.jakartaee-migration" version "0.22.0"
    id "org.flywaydb.flyway" version "7.15.0"
}

group = 'com.R4'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

flyway {
    url = 'jdbc:mysql://localhost:3306/ems'
    user = 'root'
    password = 'password'
}

ext {
    springBootVersion = '3.2.4'
    mysqlConnectorVersion = '8.3.0'
    springDocVersion = '2.5.0'
    lombokVersion = '1.18.24'
    javaxAnnotationVersion = '1.3.2'
    jakartaValidationVersion = '3.1.0-M2'
    junitJupiterVersion = '5.9.3'
    mockitoVersion = '5.3.1'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "com.mysql:mysql-connector-j:${mysqlConnectorVersion}"

    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"

    implementation 'org.threeten:threetenbp:1.5.1'
    implementation "io.swagger.core.v3:swagger-annotations:2.2.8"
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'


    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.servlet:jakarta.servlet-api:5.0.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:3.0.1'

    implementation 'com.github.joschi.jackson:jackson-datatype-threetenbp:2.15.2'
    implementation 'org.springframework:spring-webmvc:6.1.7'

    // Swagger Codegen CLI
    swaggerCodegen 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.36'

    //email
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.3.0'

    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    implementation 'org.modelmapper:modelmapper:2.4.4'

    //Security Configuration
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.auth0:java-jwt:4.4.0'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.auth0:java-jwt:3.18.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    //Testing Security
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // Testing specific dependencies
    testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-migrationsupport:${junitJupiterVersion}"
    testImplementation 'com.h2database:h2:1.4.200'
}

swaggerSources {
    emsApi {
        inputFile = file('src/main/resources/ems-API.yaml') // Ensure the path matches your YAML file location.
        code {
            language = 'spring'
            components = ['models', 'apis']
            outputDir = file("${buildDir}/generated-sources/swagger")
            additionalProperties = [
                invokerPackage: 'com.R4.generated',
                apiPackage: 'com.R4.generated.controller',
                modelPackage: 'com.R4.generated.dto',
                delegatePattern: 'true',
                java8: 'true',
                dateLibrary: 'java8',
                hideGenerationTimestamp: 'true'
            ]
            rawOptions = [
                '--type-mappings', 'OffsetDateTime=Date',
                '--import-mappings', 'java.time.OffsetDateTime=java.util.Date'
            ]
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs += ["${buildDir}/generated-sources/swagger/src/main/java"]
        }
    }
    test {
        java {
            srcDirs += ["${buildDir}/generated-sources/swagger/src/test/java"]
        }
    }
}

tasks.register('cleanGenerated', Delete) {
    delete fileTree("${buildDir}/generated-sources/swagger")
}
clean.dependsOn 'cleanGenerated'

tasks.withType(JavaCompile) {
    dependsOn tasks.generateSwaggerCode
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

tasks.withType(JavaExec) {
    standardInput = System.in
}
